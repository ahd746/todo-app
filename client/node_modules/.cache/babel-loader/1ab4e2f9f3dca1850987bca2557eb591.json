{"ast":null,"code":"import uuid from 'uuid/dist/v1';\nexport const todoReducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case 'GET_TODOS':\n    case 'ADD_TODO':\n      return [...state, {\n        id: uuid(),\n        text: action.payload.text,\n        date: action.payload.date\n      }];\n\n    case 'EDIT_TODO':\n      return state.filter(todo => todo.id !== action.payload.id);\n\n    case 'DELETE_TODO':\n      return state.filter(todo => todo.id !== action.payload.id);\n\n    case 'SEARCH_TODO':\n      return state.filter(todo => todo.text.includes(action.payload.search));\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/engah/Desktop/Projects/Node.js/React/todo-list/src/reducers/todoReducer.js"],"names":["uuid","todoReducer","state","action","console","log","type","id","text","payload","date","filter","todo","includes","search"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,cAAjB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AAEE,SAAK,WAAL;AAEA,SAAK,UAAL;AACE,aAAO,CAAC,GAAGJ,KAAJ,EAAW;AAChBK,QAAAA,EAAE,EAAEP,IAAI,EADQ;AAEhBQ,QAAAA,IAAI,EAAEL,MAAM,CAACM,OAAP,CAAeD,IAFL;AAGhBE,QAAAA,IAAI,EAAEP,MAAM,CAACM,OAAP,CAAeC;AAHL,OAAX,CAAP;;AAMF,SAAK,WAAL;AACE,aAAOR,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYJ,MAAM,CAACM,OAAP,CAAeF,EAAlD,CAAP;;AAEF,SAAK,aAAL;AACE,aAAOL,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYJ,MAAM,CAACM,OAAP,CAAeF,EAAlD,CAAP;;AAEF,SAAK,aAAL;AACE,aAAOL,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACJ,IAAL,CAAUK,QAAV,CAAmBV,MAAM,CAACM,OAAP,CAAeK,MAAlC,CAAvB,CAAP;;AAEF;AACE,aAAOZ,KAAP;AArBJ;AAuBD,CA1BM","sourcesContent":["import uuid from 'uuid/dist/v1'\r\n\r\nexport const todoReducer = (state, action) => {\r\n\r\n  console.log(action)\r\n  switch (action.type) {\r\n\r\n    case 'GET_TODOS':\r\n\r\n    case 'ADD_TODO':\r\n      return [...state, {\r\n        id: uuid(),\r\n        text: action.payload.text,\r\n        date: action.payload.date,\r\n      }]\r\n\r\n    case 'EDIT_TODO':\r\n      return state.filter((todo) => todo.id !== action.payload.id)\r\n\r\n    case 'DELETE_TODO':\r\n      return state.filter((todo) => todo.id !== action.payload.id)\r\n\r\n    case 'SEARCH_TODO':\r\n      return state.filter((todo) => todo.text.includes(action.payload.search))\r\n\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}