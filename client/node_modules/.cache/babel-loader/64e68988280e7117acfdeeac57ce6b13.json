{"ast":null,"code":"import uuid from 'uuid/dist/v1';\nexport const todoReducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_TODOS':\n      action.payload.map(todo => [...state, {\n        text: todo.title\n      }]);\n      return state;\n\n    case 'ADD_TODO':\n      return [...state, {\n        id: uuid,\n        text: action.payload.text,\n        date: action.payload.date\n      }];\n\n    case 'EDIT_TODO':\n      return state.filter(todo => todo.id !== action.payload.id);\n\n    case 'DELETE_TODO':\n      return state.filter(todo => todo.id !== action.payload.id);\n\n    case 'SEARCH_TODO':\n      return state.filter(todo => todo.text.includes(action.payload.search));\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/engah/Desktop/Projects/Node.js/React/todo-list/src/reducers/todoReducer.js"],"names":["uuid","todoReducer","state","action","type","payload","map","todo","text","title","id","date","filter","includes","search"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,cAAjB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAK,WAAL;AACED,MAAAA,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAoBC,IAAD,IACjB,CAAC,GAAGL,KAAJ,EAAW;AACTM,QAAAA,IAAI,EAAED,IAAI,CAACE;AADF,OAAX,CADF;AAKA,aAAOP,KAAP;;AAIF,SAAK,UAAL;AACE,aAAO,CAAC,GAAGA,KAAJ,EAAW;AAChBQ,QAAAA,EAAE,EAAEV,IADY;AAEhBQ,QAAAA,IAAI,EAAEL,MAAM,CAACE,OAAP,CAAeG,IAFL;AAGhBG,QAAAA,IAAI,EAAER,MAAM,CAACE,OAAP,CAAeM;AAHL,OAAX,CAAP;;AAMF,SAAK,WAAL;AACE,aAAOT,KAAK,CAACU,MAAN,CAAcL,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACE,OAAP,CAAeK,EAAlD,CAAP;;AAEF,SAAK,aAAL;AACE,aAAOR,KAAK,CAACU,MAAN,CAAcL,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACE,OAAP,CAAeK,EAAlD,CAAP;;AAEF,SAAK,aAAL;AACE,aAAOR,KAAK,CAACU,MAAN,CAAcL,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUK,QAAV,CAAmBV,MAAM,CAACE,OAAP,CAAeS,MAAlC,CAAvB,CAAP;;AAEF;AACE,aAAOZ,KAAP;AA7BJ;AA+BD,CAhCM","sourcesContent":["import uuid from 'uuid/dist/v1'\r\n\r\nexport const todoReducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'GET_TODOS':\r\n      action.payload.map((todo) =>\r\n        [...state, {\r\n          text: todo.title,\r\n        }]\r\n      )\r\n      return state\r\n\r\n\r\n\r\n    case 'ADD_TODO':\r\n      return [...state, {\r\n        id: uuid,\r\n        text: action.payload.text,\r\n        date: action.payload.date\r\n      }]\r\n\r\n    case 'EDIT_TODO':\r\n      return state.filter((todo) => todo.id !== action.payload.id)\r\n\r\n    case 'DELETE_TODO':\r\n      return state.filter((todo) => todo.id !== action.payload.id)\r\n\r\n    case 'SEARCH_TODO':\r\n      return state.filter((todo) => todo.text.includes(action.payload.search))\r\n\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}