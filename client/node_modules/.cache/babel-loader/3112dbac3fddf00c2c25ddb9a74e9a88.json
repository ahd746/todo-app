{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\engah\\\\Desktop\\\\Projects\\\\Node.js\\\\React\\\\todo-list\\\\src\\\\components\\\\Card.js\";\nimport React, { useState, useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\nexport default function Card({\n  binaryNumber\n}) {\n  const {\n    sum,\n    setSum,\n    setToggle\n  } = useContext(ThemeContext);\n  const [checked, setChecked] = useState(true);\n  const [selected, setSelected] = useState(true);\n  let numbers = [];\n\n  for (let i = 1; i < 64; i++) {\n    let k = i.toString(2);\n\n    if (k[k.length - binaryNumber] === '1') {\n      numbers.push(i);\n    }\n  }\n\n  let row1 = numbers.slice(0, 5);\n  let row2 = numbers.slice(5, 10);\n  let row3 = numbers.slice(10, 15);\n  let row4 = numbers.slice(15, 20);\n  let row5 = numbers.slice(20, 25);\n  let row6 = numbers.slice(25, 30);\n  let tableClass = '';\n  selected ? tableClass = \"table table-bordered table-dark\" : tableClass = \"table table-bordered table-dark selectedTable\";\n  return /*#__PURE__*/React.createElement(\"table\", {\n    id: \"table\",\n    className: tableClass,\n    onClick: () => {\n      setToggle(false);\n      setChecked(!checked);\n      setSelected(!selected);\n      checked ? setSum(sum + row1[0]) : setSum(sum - row1[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, row1.map(item => /*#__PURE__*/React.createElement(\"th\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 31\n    }\n  }, \" \", item, \" \"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, row2.map(item => /*#__PURE__*/React.createElement(\"th\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }\n  }, \" \", item, \" \"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, row3.map(item => /*#__PURE__*/React.createElement(\"th\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }\n  }, \" \", item, \" \"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, row4.map(item => /*#__PURE__*/React.createElement(\"th\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }\n  }, \" \", item, \" \"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, row5.map(item => /*#__PURE__*/React.createElement(\"th\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }\n  }, \" \", item, \" \"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, row6.map(item => /*#__PURE__*/React.createElement(\"th\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 31\n    }\n  }, \" \", item, \" \")))));\n}","map":{"version":3,"sources":["C:/Users/engah/Desktop/Projects/Node.js/React/todo-list/src/components/Card.js"],"names":["React","useState","useContext","ThemeContext","Card","binaryNumber","sum","setSum","setToggle","checked","setChecked","selected","setSelected","numbers","i","k","toString","length","push","row1","slice","row2","row3","row4","row5","row6","tableClass","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\n\r\nexport default function Card({ binaryNumber }) {\r\n  const { sum, setSum, setToggle } = useContext(ThemeContext)\r\n  const [checked, setChecked] = useState(true);\r\n  const [selected, setSelected] = useState(true);\r\n\r\n  let numbers = [];\r\n  for (let i = 1; i < 64; i++) {\r\n    let k = i.toString(2);\r\n    if (k[k.length - binaryNumber] === '1') {\r\n      numbers.push(i);\r\n    }\r\n  }\r\n  let row1 = numbers.slice(0, 5);\r\n  let row2 = numbers.slice(5, 10);\r\n  let row3 = numbers.slice(10, 15);\r\n  let row4 = numbers.slice(15, 20);\r\n  let row5 = numbers.slice(20, 25);\r\n  let row6 = numbers.slice(25, 30);\r\n\r\n  let tableClass = '';\r\n  selected ? tableClass = \"table table-bordered table-dark\" : tableClass = \"table table-bordered table-dark selectedTable\";\r\n\r\n  return (\r\n    <table\r\n      id=\"table\"\r\n      className={tableClass}\r\n      onClick={() => {\r\n        setToggle(false)\r\n        setChecked(!checked)\r\n        setSelected(!selected)\r\n        checked ? setSum(sum + row1[0]) : setSum(sum - row1[0])\r\n      }} >\r\n      <tbody>\r\n        <tr>{row1.map(item => <th key={item}> {item} </th>)}</tr>\r\n        <tr>{row2.map(item => <th key={item}> {item} </th>)}</tr>\r\n        <tr>{row3.map(item => <th key={item}> {item} </th>)}</tr>\r\n        <tr>{row4.map(item => <th key={item}> {item} </th>)}</tr>\r\n        <tr>{row5.map(item => <th key={item}> {item} </th>)}</tr>\r\n        <tr>{row6.map(item => <th key={item}> {item} </th>)}</tr>\r\n      </tbody>\r\n    </table >\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}