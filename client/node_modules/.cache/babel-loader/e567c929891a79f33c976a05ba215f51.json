{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\engah\\\\Desktop\\\\Projects\\\\Node.js\\\\MERN\\\\todo-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\engah\\\\Desktop\\\\Projects\\\\Node.js\\\\MERN\\\\todo-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";export var todoReducer=function todoReducer(state,action){switch(action.type){case'GET_TODOS':return _objectSpread(_objectSpread({},state),{},{todos:action.payload});case'ADD_TODO':return _objectSpread(_objectSpread({},state),{},{todos:[action.payload].concat(_toConsumableArray(state.todos))});case'DELETE_TODO':return _objectSpread(_objectSpread({},state),{},{todos:state.todos.filter(function(todo){return todo._id!==action.payload._id;})});case'SEARCH_TODO':return _objectSpread(_objectSpread({},state),{},{todos:state.todos.filter(function(todo){return todo.title.includes(action.payload.search);})});default:return state;}};","map":{"version":3,"sources":["C:/Users/engah/Desktop/Projects/Node.js/MERN/todo-app/client/src/reducers/todoReducer.js"],"names":["todoReducer","state","action","type","todos","payload","filter","todo","_id","title","includes","search"],"mappings":"uYAAA,MAAO,IAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC5C,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAK,WAAL,CACE,sCACKF,KADL,MAEEG,KAAK,CAAEF,MAAM,CAACG,OAFhB,GAMF,IAAK,UAAL,CACE,sCACKJ,KADL,MAEEG,KAAK,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,KAA5B,EAFP,GAKF,IAAK,aAAL,CACE,sCACKH,KADL,MAEEG,KAAK,CAAEH,KAAK,CAACG,KAAN,CAAYE,MAAZ,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaN,MAAM,CAACG,OAAP,CAAeG,GAAtC,EAAnB,CAFT,GAIF,IAAK,aAAL,CACE,sCACKP,KADL,MAEEG,KAAK,CAAEH,KAAK,CAACG,KAAN,CAAYE,MAAZ,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACE,KAAL,CAAWC,QAAX,CAAoBR,MAAM,CAACG,OAAP,CAAeM,MAAnC,CAAV,EAAnB,CAFT,GAIF,QACE,MAAOV,CAAAA,KAAP,CA1BJ,CA4BD,CA7BM","sourcesContent":["export const todoReducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'GET_TODOS':\r\n      return {\r\n        ...state,\r\n        todos: action.payload\r\n\r\n      }\r\n\r\n    case 'ADD_TODO':\r\n      return {\r\n        ...state,\r\n        todos: [action.payload, ...state.todos]\r\n      }\r\n\r\n    case 'DELETE_TODO':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo._id !== action.payload._id)\r\n      }\r\n    case 'SEARCH_TODO':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo.title.includes(action.payload.search))\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}